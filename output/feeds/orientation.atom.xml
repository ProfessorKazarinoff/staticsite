<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Python for Undergraduate Engineers - Orientation</title><link href="https://professorkazarinoff.github.io/staticsite/" rel="alternate"></link><link href="/feeds/orientation.atom.xml" rel="self"></link><id>https://professorkazarinoff.github.io/staticsite/</id><updated>2018-05-01T09:21:00-07:00</updated><entry><title>Opening a Jupyter Notebook on Windows</title><link href="https://professorkazarinoff.github.io/staticsite/opening-a-jupyter-notebook-on-windows.html" rel="alternate"></link><published>2018-05-01T09:20:00-07:00</published><updated>2018-05-01T09:21:00-07:00</updated><author><name>Peter D. Kazarinoff</name></author><id>tag:professorkazarinoff.github.io,2018-05-01:/staticsite/opening-a-jupyter-notebook-on-windows.html</id><summary type="html">&lt;p&gt;In this post, we will run through how to open a &lt;strong&gt;jupyter notebook&lt;/strong&gt; on Windows 10.  &lt;strong&gt;Jupyter notebooks&lt;/strong&gt; are one way engineers can write and execute &lt;strong&gt;Python&lt;/strong&gt; code. &lt;strong&gt;Jupyter notebooks&lt;/strong&gt; contain &lt;strong&gt;Python&lt;/strong&gt; code, the output of that code produces when it is run and markdown cells to explain what the code means. A &lt;strong&gt;jupyter notebook&lt;/strong&gt; can be started from the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt;, the Windows start menu and by using the &lt;strong&gt;Anaconda Navigator&lt;/strong&gt;.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this post, we will run through how to open a &lt;strong&gt;jupyter notebook&lt;/strong&gt; on Windows 10.  &lt;strong&gt;Jupyter notebooks&lt;/strong&gt; are one way engineers can write and execute &lt;strong&gt;Python&lt;/strong&gt; code. &lt;strong&gt;Jupyter notebooks&lt;/strong&gt; contain &lt;strong&gt;Python&lt;/strong&gt; code, the output of that code produces when it is run and markdown cells to explain what the code means. A &lt;strong&gt;jupyter notebook&lt;/strong&gt; can be started from the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt;, the Windows start menu and the &lt;strong&gt;Anaconda Navigator&lt;/strong&gt;.&lt;/p&gt;
&lt;h3 id="3-ways-to-open-a-jupyter-notebook"&gt;3 ways to open a &lt;strong&gt;jupyter notebook&lt;/strong&gt;:&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Anaconda Prompt&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Windows Start Menu&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Anaconda Navigator&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id="1-anaconda-prompt"&gt;1. &lt;strong&gt;Anaconda Prompt&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The first way to start a new &lt;strong&gt;jupyter notebook&lt;/strong&gt; is to use the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Go to the Windows start menu and select &lt;strong&gt;[Anaconda Prompt]&lt;/strong&gt; under &lt;strong&gt;[Anaconda3]&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda in start menu" src="/posts/jupyter/anaconda_start_menu.png"&gt;&lt;/p&gt;
&lt;p&gt;If you don't see the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; in the Windows Start Menu, then you need to install &lt;strong&gt;Anaconda&lt;/strong&gt;. Download &lt;strong&gt;Anaconda&lt;/strong&gt; at the following link: &lt;a href="https://www.anaconda.com/download/"&gt;Anaconda.com/downloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; window should look something like:&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda prompt" src="/posts/jupyter/jupyter_notebook_anaconda_prompt.png"&gt;&lt;/p&gt;
&lt;p&gt;At the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&amp;gt; jupyter notebook
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;This will start the &lt;strong&gt;jupyter notebook&lt;/strong&gt;. The output in the terminal will look something like below:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Copy/paste this URL into your browser when you connect for the first time,
    to login with a token:
        http://localhost:8888/?token=6bdef677d3503fbb23e1b4fa0c802ee7c20bdcfd4d9b9951
[I 16:14:12.661 NotebookApp] Accepting one-time-token-authenticated connection from ::1
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A web browser should open and you should be able to see the &lt;strong&gt;jupyter file browser&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/new_notebook_from_browser.png"&gt;&lt;/p&gt;
&lt;p&gt;In the upper right select &lt;strong&gt;[New]&lt;/strong&gt; &amp;rarr; &lt;strong&gt;[Python 3]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;You will see a new tab open in your web browser. This new page is a &lt;strong&gt;jupyter notebook&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/new_notebook.png"&gt;&lt;/p&gt;
&lt;p&gt;To rename the &lt;strong&gt;jupyter notebook&lt;/strong&gt;, click the file name at the top of the page to the right of the jupyter icon.&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/click_change_name.png"&gt;&lt;/p&gt;
&lt;p&gt;This will open a dialog box where the new name can be typed.&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/rename_window.png"&gt;&lt;/p&gt;
&lt;p&gt;Try typing this in the first cell in the &lt;strong&gt;notebook&lt;/strong&gt; to the right of the &lt;code&gt;In [ ]:&lt;/code&gt; prompt&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kn"&gt;import&lt;/span&gt;  &lt;span class="nn"&gt;this&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Then click the run button in the middle of the menu at the top of the notebook&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/run_import_this.png"&gt;&lt;/p&gt;
&lt;h3 id="2-windows-start-menu"&gt;2. Windows Start Menu&lt;/h3&gt;
&lt;p&gt;Another way to open a &lt;strong&gt;jupyter notebook&lt;/strong&gt; is to use the Windows start menu. &lt;/p&gt;
&lt;p&gt;Open the Windows start menu and select &lt;strong&gt;[Anaconda3(64 bit)]&lt;/strong&gt; &amp;rarr; &lt;strong&gt;[Jupyter Notebook]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/windows_start_jupyter_notebook.png"&gt;&lt;/p&gt;
&lt;p&gt;This will open the &lt;strong&gt;jupyter file browser&lt;/strong&gt; in a web browser tab. &lt;/p&gt;
&lt;p&gt;In the upper right select &lt;strong&gt;[New]&lt;/strong&gt; &amp;rarr; &lt;strong&gt;[Python 3]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/new_notebook_from_browser.png"&gt;&lt;/p&gt;
&lt;p&gt;A new &lt;strong&gt;notebook&lt;/strong&gt; will open as a new tab in your web browser&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/new_notebook.png"&gt;&lt;/p&gt;
&lt;h3 id="3-anaconda-navigator"&gt;3. &lt;strong&gt;Anaconda Navigator&lt;/strong&gt;&lt;/h3&gt;
&lt;p&gt;The last way we'll review how to open a &lt;strong&gt;jupyter notebook&lt;/strong&gt; is by using the &lt;strong&gt;Anaconda Navigator&lt;/strong&gt;. You can open the &lt;strong&gt;Anaconda Navigator&lt;/strong&gt; using the Windows start menu and selecting &lt;strong&gt;[Anaconda3(64-bit)]&lt;/strong&gt; &amp;rarr; [Anaconda Navigator]&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/windows_start_anaconda_navigator.png"&gt;&lt;/p&gt;
&lt;p&gt;This will open the &lt;strong&gt;Anaconda Navigator&lt;/strong&gt;.  In the middle of the page, in the &lt;strong&gt;jupyter notebook&lt;/strong&gt; tile, click &lt;strong&gt;[Launch]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/anaconda_navigator_jupyter_notebook_launch.png"&gt;&lt;/p&gt;
&lt;p&gt;This will open the &lt;strong&gt;jupyter file browser&lt;/strong&gt; in a web browser tab. &lt;/p&gt;
&lt;p&gt;In the upper right select &lt;strong&gt;[New]&lt;/strong&gt; &amp;rarr; &lt;strong&gt;[Python 3]&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/new_notebook_from_browser.png"&gt;&lt;/p&gt;
&lt;p&gt;A new &lt;strong&gt;notebook&lt;/strong&gt; will open as a new tab in your web browser&lt;/p&gt;
&lt;p&gt;&lt;img alt="jupyter file browswer" src="/posts/jupyter/new_notebook.png"&gt;&lt;/p&gt;
&lt;h4 id="congratulations-you-know-how-to-open-a-jupyter-notebook-on-your-windows-10-now-go-write-some-python-code-to-solve-some-problems"&gt;Congratulations! You know how to open a &lt;strong&gt;jupyter notebook&lt;/strong&gt; on your Windows 10. Now go write some &lt;strong&gt;Python Code&lt;/strong&gt; to solve some problems!&lt;/h4&gt;</content><category term="jupyter"></category><category term="python"></category><category term="anaconda"></category><category term="windows"></category><category term="jupyter notebook"></category></entry><entry><title>Python Data Types</title><link href="https://professorkazarinoff.github.io/staticsite/python-data-types.html" rel="alternate"></link><published>2018-01-18T10:15:00-08:00</published><updated>2018-01-18T10:15:00-08:00</updated><author><name>Peter D. Kazarinoff</name></author><id>tag:professorkazarinoff.github.io,2018-01-18:/staticsite/python-data-types.html</id><summary type="html">&lt;p&gt;Python has many useful built in data types. Python variables can store different types of data and can be created dynamically, without first defining a data type. It's useful for engineers to understand a couple of Python's core data types in order to write well constructed code. Below we will discuss a few different data types.&lt;/p&gt;</summary><content type="html">&lt;p&gt;Python has many useful built in data types. Python variables can store different types of data and can be created dynamically, without first defining a data type. It's useful for engineers to understand a couple of Python's core data types in order to write well constructed code. Below we will discuss a few different data types.&lt;/p&gt;
&lt;h4 id="integers"&gt;Integers&lt;/h4&gt;
&lt;p&gt;Integers are one of the Python data types. An integer is a whole number, negative, positive or zero. In Python, integer variables can be defined by simply assigning a whole number to a variable name. We can determine data type of a variable using the &lt;code&gt;type()&lt;/code&gt; function.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;z&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="floating-point-numbers"&gt;Floating Point Numbers&lt;/h4&gt;
&lt;p&gt;Floating point numbers or &lt;em&gt;floats&lt;/em&gt; are another Python data type. Floats are decimals, positive, negative and zero. Floats can also be numbers in scientific notation which contain exponents. In Python, a float can be defined using a decimal point &lt;code&gt;.&lt;/code&gt; when a variable is assigned.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;6.2&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;c&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mf"&gt;0.03&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;6.02e23&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;e&lt;/span&gt;
&lt;span class="mf"&gt;6.02e+23&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To make sure a variable is a float instead of an integer even if it is a whole number, a trailing decimal point &lt;code&gt;.&lt;/code&gt; is used. Note the difference when a decimal point comes after the a whole number:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;     &lt;span class="c1"&gt;# no decimal point&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="n"&gt;g&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;5.&lt;/span&gt;    &lt;span class="c1"&gt;# decimal point&lt;/span&gt;
&lt;span class="o"&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;g&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="boolean"&gt;Boolean&lt;/h4&gt;
&lt;p&gt;The &lt;em&gt;boolean&lt;/em&gt; data type is either True or False. In Python, boolean variables are defined by the &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; key words. Note that &lt;code&gt;True&lt;/code&gt; and &lt;code&gt;False&lt;/code&gt; must have an Upper Case first letter. Using a lowercase &lt;code&gt;true&lt;/code&gt; returns an error.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;True&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;a&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;bool&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;b&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="bp"&gt;False&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;b&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;bool&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;c&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;true&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;input&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="ne"&gt;NameError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;true&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;defined&lt;/span&gt;
&lt;span class="n"&gt;d&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;false&lt;/span&gt;
&lt;span class="n"&gt;Traceback&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;most&lt;/span&gt; &lt;span class="n"&gt;recent&lt;/span&gt; &lt;span class="n"&gt;call&lt;/span&gt; &lt;span class="n"&gt;last&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
  &lt;span class="n"&gt;File&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;input&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="ow"&gt;in&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="n"&gt;module&lt;/span&gt;&lt;span class="o"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="ne"&gt;NameError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;false&amp;#39;&lt;/span&gt; &lt;span class="ow"&gt;is&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;defined&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="string"&gt;String&lt;/h4&gt;
&lt;p&gt;Strings are sequences of letters, numbers, spaces and symbols. In Python, strings can be almost any length and can contain spaces. String variables are assigned in Python using quotation marks &lt;code&gt;'   '&lt;/code&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;z&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;str&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Engineers&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;string&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;str&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;A numbers and decimals can be defined as strings too. If a decimal number is defined using quotes &lt;code&gt;'   '&lt;/code&gt;, it will be saved as a string rather than as a float. This is true of whole numbers as well. Whole numbers defined using quotes will become strings just like decimal numbers defined using quotes.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;5.2&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;str&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;2&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;str&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h4 id="complex-numbers"&gt;Complex numbers&lt;/h4&gt;
&lt;p&gt;One final data type useful to engineers are complex numbers. A complex number is defined in Python using a real component &lt;code&gt;+&lt;/code&gt; imaginary component&lt;code&gt;j&lt;/code&gt;. The letter &lt;code&gt;j&lt;/code&gt; must be used in the imaginary component. Using the letter &lt;code&gt;i&lt;/code&gt; will return an error. Note how imaginary numbers can be added to integers and floats.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;comp&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2j&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comp&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;complex&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;comp2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;
              &lt;span class="o"&gt;^&lt;/span&gt;
&lt;span class="ne"&gt;SyntaxError&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;invalid&lt;/span&gt; &lt;span class="n"&gt;syntax&lt;/span&gt;

&lt;span class="n"&gt;intgr&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;3&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;intgr&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;comp_sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;comp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;intgr&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comp_sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;7&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="n"&gt;flt&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;2.1&lt;/span&gt;
&lt;span class="n"&gt;comp_sum&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;comp&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;flt&lt;/span&gt;
&lt;span class="k"&gt;print&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;comp_sum&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mf"&gt;6.1&lt;/span&gt;&lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="mi"&gt;2j&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="converting-between-different-data-types"&gt;Converting between different data types&lt;/h3&gt;
&lt;p&gt;The number five can be an integer, or a float or a string depending on how it is assigned. Python has built in functions to convert between data types. The &lt;code&gt;int()&lt;/code&gt; &lt;code&gt;float()&lt;/code&gt; and &lt;code&gt;str()&lt;/code&gt; methods will convert our &lt;em&gt;5&lt;/em&gt; from one Python data type to another.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;int_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;5&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int_num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;int&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;float_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int_num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;float_num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;float&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;str_num&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;int_num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;str_num&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="o"&gt;&amp;lt;&lt;/span&gt;&lt;span class="k"&gt;class&lt;/span&gt; &lt;span class="err"&gt;&amp;#39;&lt;/span&gt;&lt;span class="nc"&gt;str&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;gt;&lt;/span&gt;
&lt;span class="n"&gt;str_num&lt;/span&gt;
&lt;span class="s1"&gt;&amp;#39;5&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;h3 id="summary"&gt;Summary&lt;/h3&gt;
&lt;table class="table table-striped table-bordered table-hover"&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Data Type&lt;/th&gt;
&lt;th&gt;Python Class&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;th&gt;Examples&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;integer&lt;/td&gt;
&lt;td&gt;&lt;code&gt;int&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;whole numbers: negative positive and zero&lt;/td&gt;
&lt;td&gt;5   -2   0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;floating point number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;float&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;decimal number: negative positive and zero. Can contain an exponent&lt;/td&gt;
&lt;td&gt;2.3   -0.05   4.5e8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;boolean&lt;/td&gt;
&lt;td&gt;&lt;code&gt;bool&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;True or False&lt;/td&gt;
&lt;td&gt;True   False&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;string&lt;/td&gt;
&lt;td&gt;&lt;code&gt;str&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;sequence of letters, numbers, spaces and symbols&lt;/td&gt;
&lt;td&gt;Gabby   Engineering!   5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;complex number&lt;/td&gt;
&lt;td&gt;&lt;code&gt;comp&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;number with both real and imaginary components&lt;/td&gt;
&lt;td&gt;4+2j   0-2j   6+0j&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="python"></category><category term="data types"></category></entry><entry><title>Python Virtual Environments in OS X, Linux and Windows 10</title><link href="https://professorkazarinoff.github.io/staticsite/virtualenv-in-osx-linux-windows.html" rel="alternate"></link><published>2017-12-22T14:36:00-08:00</published><updated>2017-12-22T14:36:00-08:00</updated><author><name>Peter D. Kazarinoff</name></author><id>tag:professorkazarinoff.github.io,2017-12-22:/staticsite/virtualenv-in-osx-linux-windows.html</id><summary type="html">&lt;p&gt;In this post, I'll review creating virtual environments on three different operating systems: Windows 10, Linux and Mac OSX. Using virtual environments is good programming practice when using Python. A virtual environment will separate the Python interpreter and installed modules from the main Python installation.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this post, I'll review creating virtual environments on three different operating systems: Windows 10, Linux and Mac OSX. Using virtual environments is good programming practice when using Python. A virtual environment will separate the Python interpreter and installed modules from the main Python installation.&lt;/p&gt;
&lt;p&gt;I use three different operating systems on three different computers:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Work: Windows 10 (no admin access)&lt;/li&gt;
&lt;li&gt;Home Office: Ubuntu 16.04 LTS&lt;/li&gt;
&lt;li&gt;Laptop: Mac OSX&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Setting up a Python virtual environment is different on each one of these operating systems. Let's see at what happens when we try and create a new virtual environment in each.&lt;/p&gt;
&lt;h3 id="ubuntu-1604"&gt;Ubuntu 16.04&lt;/h3&gt;
&lt;p&gt;Linux should be the easiest to get a new virtualenv up and running. In Ubuntu 16.04, I have a terminal and admin access (can use sudo). But look what happens when I try to set up a new virtualenv without any flags or customization:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkvirtualenv webscrape
$ &lt;span class="nb"&gt;source&lt;/span&gt; activate webscrape
&lt;span class="o"&gt;(&lt;/span&gt;webscrape&lt;span class="o"&gt;)&lt;/span&gt;$ which python
$ &lt;span class="m"&gt;2&lt;/span&gt;.7.1 
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The default installation is legacy Python!? I don't want the legacy 2.7 version, I want at least Python 3.2 and would prefer Python 3.6. Let's delete that legacy Python environment. Make sure the virtual environment is &lt;code&gt;deactivate&lt;/code&gt;d first.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;webscrape&lt;span class="o"&gt;)&lt;/span&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; deactivate
$ rmvirtualenv webscrape
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Let's try to specify Python 3 with the &lt;code&gt;-p python3&lt;/code&gt; flag&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkvirtualenv -p python3 webscrape
$ error
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Now what? Path is too long? How is that possible? What happens when we see which Python version is the default python3?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ which python3
$ bin/usr/anaconda/python3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;So that's the flag we need to use when the &lt;code&gt;viruatlenv&lt;/code&gt; is created. The &lt;code&gt;--python='which python3'&lt;/code&gt; flag will point &lt;strong&gt;virtualenvwrapper&lt;/strong&gt; to the correct Python version. The new virtualenv is initiated with the full file path to our new environment &lt;code&gt;~/.virtualenvs/webscrape&lt;/code&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkvirtualenv --python&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;which python3&amp;#39;&lt;/span&gt; ~/.virtualenvs/webscrape
&lt;span class="o"&gt;(&lt;/span&gt;webscrape&lt;span class="o"&gt;)&lt;/span&gt;$ python
Python &lt;span class="m"&gt;3&lt;/span&gt;.6.2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Nice. Now we can &lt;code&gt;pip install&lt;/code&gt; away. So what about creating a new virtual environment on a MacBook Air with OSX?&lt;/p&gt;
&lt;h3 id="mac-osx"&gt;Mac OSX&lt;/h3&gt;
&lt;p&gt;Mac OSX has a terminal too. I get to it by going to the finder and clicking the search in the upper right or using [command] + [space] to bring up the spotlight search bar. Type &lt;code&gt;terminal&lt;/code&gt; into the search bar. Setting up a virtualenv should be pretty easy right?&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkvirtualenv webscrape
$ &lt;span class="nb"&gt;source&lt;/span&gt; activate webscrape
&lt;span class="o"&gt;(&lt;/span&gt;webscrape&lt;span class="o"&gt;)&lt;/span&gt;$ which python
python &lt;span class="m"&gt;2&lt;/span&gt;.7
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Again!? More legacy Python?! Stop it already with the legacy Python. We want Python! Preferably 3.6. Gotta make sure that Python 3 is installed some where. &lt;code&gt;rmvirtualenv&lt;/code&gt; that thing.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;(&lt;/span&gt;webscrape&lt;span class="o"&gt;)&lt;/span&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; deactivate
$ rmvirtualenv webscrape
$ which python3
$ usr/bin/python
$ virtualenv -p python3 webscrape
$ &lt;span class="nb"&gt;source&lt;/span&gt; activate webscrape
&lt;span class="o"&gt;(&lt;/span&gt;webscrape&lt;span class="o"&gt;)&lt;/span&gt;$ python
python &lt;span class="m"&gt;3&lt;/span&gt;.6.2
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;OK. Two down and one to go. Is this any easier on Windows 10? Especially with no admin access? Can't be right? Let's see.&lt;/p&gt;
&lt;h3 id="windows-10-no-admin-access"&gt;Windows 10 (no admin access)&lt;/h3&gt;
&lt;p&gt;I have a Windows 10 machine at work with no admin access. I can't install any programs on my work computer that use the Windows active directory (which is most programs). The Python distribution that has worked out the best has been &lt;strong&gt;Anaconda&lt;/strong&gt;. Besides coming with Python 3, and having a bunch of packages already installed, it also comes with a command line client call the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt;. The &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; operates a little like the terminal on Linux and Mac OSX, but some of the commands are a little different. To make a new virtual environment from the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; type:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ conda create -n webscrape &lt;span class="nv"&gt;python&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;.6
$ proceed &lt;span class="o"&gt;([&lt;/span&gt;y&lt;span class="o"&gt;]&lt;/span&gt;/n&lt;span class="o"&gt;)&lt;/span&gt;?
$ conda activate webscrape
&lt;span class="o"&gt;(&lt;/span&gt;webscrape&lt;span class="o"&gt;)&lt;/span&gt;$ python --version
python &lt;span class="m"&gt;3&lt;/span&gt;.6.3 :: Anaconda, Inc.
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Rockin' right? Turns out that the Windows 10 virtual environment was one of the easiest to set up. Who would have guessed that? That's one piece of magic from the &lt;strong&gt;Anaconda&lt;/strong&gt; distribution. If you are using Windows, I think &lt;strong&gt;Anaconda&lt;/strong&gt; is the way to go.&lt;/p&gt;
&lt;p&gt;&lt;/br&gt;
&lt;/br&gt;&lt;/p&gt;
&lt;p&gt;End Note:&lt;/p&gt;
&lt;p&gt;Maybe it's best to use &lt;strong&gt;conda&lt;/strong&gt; on both OSX and Linux too...  You don't have to mess around with &lt;strong&gt;&lt;em&gt;~/.bash_profile&lt;/em&gt;&lt;/strong&gt; or pointing virtualenv wrapper to the proper directory.&lt;/p&gt;</content><category term="python"></category><category term="Windows 10"></category><category term="virtualenv"></category><category term="OSX"></category><category term="Linux"></category><category term="Ubuntu"></category><category term="pip"></category><category term="conda"></category><category term="anaconda"></category><category term="anaconda prompt"></category></entry><entry><title>Create a new virtual environment with Conda</title><link href="https://professorkazarinoff.github.io/staticsite/new-virtual-environment-with-conda.html" rel="alternate"></link><published>2017-11-17T20:20:00-08:00</published><updated>2017-11-17T20:20:00-08:00</updated><author><name>Peter D. Kazarinoff</name></author><id>tag:professorkazarinoff.github.io,2017-11-17:/staticsite/new-virtual-environment-with-conda.html</id><summary type="html">&lt;p&gt;To start a new Python project, it is best practice to create a new virtual environment. I have the &lt;strong&gt;Anaconda&lt;/strong&gt; distribution of Python installed on my Windows 10 machine at work. When you &lt;a href="https://professorkazarinoff.github.io/staticsite/installing-anaconda-on-windows.html"&gt;install &lt;strong&gt;Anaconda&lt;/strong&gt;&lt;/a&gt;, it comes with the very useful &lt;strong&gt;Anaconda Prompt&lt;/strong&gt;. Using the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; is a bit …&lt;/p&gt;</summary><content type="html">&lt;p&gt;To start a new Python project, it is best practice to create a new virtual environment. I have the &lt;strong&gt;Anaconda&lt;/strong&gt; distribution of Python installed on my Windows 10 machine at work. When you &lt;a href="https://professorkazarinoff.github.io/staticsite/installing-anaconda-on-windows.html"&gt;install &lt;strong&gt;Anaconda&lt;/strong&gt;&lt;/a&gt;, it comes with the very useful &lt;strong&gt;Anaconda Prompt&lt;/strong&gt;. Using the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; is a bit like using the terminal on a Mac OSX or Linux. To start the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; on Windows 10, go to the Windows start button on the lower left and select &lt;strong&gt;Anaconda Prompt&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda in start menu" src="images/anaconda_from_start_menu.png"&gt;&lt;/p&gt;
&lt;p&gt;To create the new environment, we need to issue the following command at the prompt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda create --name webscrape python=3.6
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The &lt;code&gt;conda create&lt;/code&gt; command builds the new virtual environment. The &lt;code&gt;--name webscrape&lt;/code&gt; flag gives our new virtual environment the name &lt;code&gt;webscrape&lt;/code&gt;.  I like to name my virtual environments the same name as the project that I will use that environment for, or after the name of the package that will be used the most.  Including &lt;code&gt;python=3.6&lt;/code&gt; ensures that your virtual environment has an up to date version of python. &lt;/p&gt;
&lt;p&gt;Conda will tell us:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;The following NEW packages will be INSTALLED:

    certifi:        2016.2.28-py36_0
    pip:            9.0.1-py36_1
    python:         3.6.2-0
    setuptools:     36.4.0-py36_0
    vs2015_runtime: 14.0.25420-0
    wheel:          0.29.0-py36_0
    wincertstore:   0.2-py36_0

Proceed ([y]/n)? y
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Type &lt;code&gt;y&lt;/code&gt; to confirm that you want to create the new virtual environment. To use the new virtual environment &lt;code&gt;webscrape&lt;/code&gt; you need to &lt;em&gt;activate&lt;/em&gt; it by typing:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;activate webscrape
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;You know you are in your virtual environment &lt;code&gt;webscrape&lt;/code&gt; when &lt;code&gt;(webscrape)&lt;/code&gt; is in parenthesis at the start of the prompt:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;(webscrape) tribilium@Den-PC:~$
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;To deactivate an active environment, use:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;deactivate
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;For power-users using the terminal on Mac or Linux, you must use &lt;code&gt;source activate&lt;/code&gt; to enter into the virtual environment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;source activate webscrape
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;and&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;source deactivate webscrape
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;p&gt;If you see the &lt;code&gt;(webscrape)&lt;/code&gt; in parenthesis before the command prompt, that means you set up the new virtual environment and are now using it. You can view a list of your virtual environments using the &lt;code&gt;conda info --envs&lt;/code&gt; or &lt;code&gt;conda env list&lt;/code&gt; command.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda info --envs

# conda environments:
#
matplotlib               /home/tribilium/anaconda3/envs/matplotlib
webscrape              * /home/tribilium/anaconda3/envs/pelican
root                     /home/tribilium/anaconda3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Notice the &lt;code&gt;*&lt;/code&gt; asterisk on the line with &lt;code&gt;webscrape&lt;/code&gt;. The virtual environment with the &lt;code&gt;*&lt;/code&gt; is currently active. &lt;/p&gt;
&lt;p&gt;To exit the virtual environment, use the command &lt;code&gt;deactivate&lt;/code&gt;. If you run &lt;code&gt;conda env list&lt;/code&gt; again, you'll see there is no &lt;code&gt;*&lt;/code&gt; in front of &lt;code&gt;webscrape&lt;/code&gt;. That's because you are not currently in that virtual environment.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;conda env list

# conda environments:
#
matplotlib               /home/tribilium/anaconda3/envs/matplotlib
webscrape                /home/tribilium/anaconda3/envs/pelican
root                  *  /home/tribilium/anaconda3
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;We can spin up the virtual environment again with the &lt;code&gt;activate&lt;/code&gt; command.&lt;/p&gt;
&lt;p&gt;Want to use &lt;code&gt;pip&lt;/code&gt; and &lt;code&gt;virtualenv&lt;/code&gt; / &lt;code&gt;virtuelenv wrapper&lt;/code&gt; instead? Great. Those will work too. For windows and computers with locked down active directories, I prefer &lt;code&gt;conda&lt;/code&gt;. It just seems to make things easier. For a great post about the differences between &lt;code&gt;conda&lt;/code&gt; and &lt;code&gt;pip&lt;/code&gt; see &lt;a href="http://jakevdp.github.io/blog/2016/08/25/conda-myths-and-misconceptions/"&gt;this post&lt;/a&gt; by Jake VanderPlas.&lt;/p&gt;</content><category term="python"></category><category term="conda"></category><category term="virtualenv"></category><category term="anaconda"></category><category term="anaconda prompt"></category></entry><entry><title>Installing Anaconda on Windows</title><link href="https://professorkazarinoff.github.io/staticsite/installing-anaconda-on-windows.html" rel="alternate"></link><published>2017-11-14T09:20:00-08:00</published><updated>2017-11-14T09:21:00-08:00</updated><author><name>Peter D. Kazarinoff</name></author><id>tag:professorkazarinoff.github.io,2017-11-14:/staticsite/installing-anaconda-on-windows.html</id><summary type="html">&lt;p&gt;In this post, we will run through installing the &lt;a href="https://www.anaconda.com/what-is-anaconda/"&gt;Anaconda distribution&lt;/a&gt; of Python on Windows 10. I think the Anaconda distribution of Python is the the best option for undergraduate engineers who want to use Python. Anaconda is free (although the download is large which can take time) and can be installed on school or work computers where you don't have administrator access or the ability to install new programs.&lt;/p&gt;</summary><content type="html">&lt;p&gt;In this post, we will run through installing the Anaconda distribution of Python on Windows 10. I think the Anaconda distribution of Python is the the best option for undergraduate engineers who want to use Python. Anaconda is free (although the download is large which can take time) and can be installed on school or work computers where you don't have administrator access or the ability to install new programs.&lt;/p&gt;
&lt;h4 id="steps"&gt;Steps:&lt;/h4&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Visit &lt;a href="https://www.anaconda.com/download/"&gt;Anaconda.com/downloads&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Select Windows&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Download the .exe installer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open and run the .exe installer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Open the Anaconda prompt and run some Python code&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id="1-visit-the-anaconda-downloads-page"&gt;1. Visit the Anaconda downloads page&lt;/h4&gt;
&lt;p&gt;Go to the following link: &lt;a href="https://www.anaconda.com/download/"&gt;Anaconda.com/downloads&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The Anaconda Downloads Page will look something like this:&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda download page" src="images/anaconda_download_page.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id="2-select-the-windows"&gt;2. Select the Windows&lt;/h4&gt;
&lt;p&gt;Select Windows where the three opperating systems are listed.&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda select Windows" src="images/anaconda_select_windows.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id="3-download"&gt;3. Download&lt;/h4&gt;
&lt;p&gt;Download the Python 3.6 distribution. Python 2.7 is legacy Python. For undergraduate engineers, select the Python 3.6 version.&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda select python 3.6" src="images/anaconda_python3_or_python2.png"&gt;&lt;/p&gt;
&lt;p&gt;You may be prompted to enter your email. You can still download Anaconda if you click &lt;strong&gt;No Thanks&lt;/strong&gt; and don't enter your Work Email address.&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda" src="images/anaconda_enter_email.png"&gt;&lt;/p&gt;
&lt;p&gt;The download is quite large (over 500 MB) so it may take a while for the download to complete.&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda downloading" src="images/anaconda_downloading.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id="4-open-and-run-the-installer"&gt;4. Open and run the installer&lt;/h4&gt;
&lt;p&gt;Once the download completes, open and run the .exe installer&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda installer" src="images/anaconda_run_installer.png"&gt;&lt;/p&gt;
&lt;p&gt;At the beginning of the install you will need to click &lt;strong&gt;Next&lt;/strong&gt; to confirm the installation&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda installer click next" src="images/anaconda_installer_click_next.png"&gt;&lt;/p&gt;
&lt;p&gt;and agree to the license&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda license" src="images/anaconda_agree_to_license.png"&gt;&lt;/p&gt;
&lt;p&gt;At the Advanced Installation Options screen, I recommend that you &lt;strong&gt;do not check&lt;/strong&gt; "Add Anaconda to my PATH environment variable"&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda path variable" src="images/anaconda_path2.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id="5-open-the-conda-prompt-from-the-windows-start-menu"&gt;5. Open the Conda prompt from the Windows start menu&lt;/h4&gt;
&lt;p&gt;After the Anaconda install is complete, you can go to the Windows start menu and select the Anaconda Prompt&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda in start menu" src="images/anaconda_from_start_menu.png"&gt;&lt;/p&gt;
&lt;p&gt;This will open up the Anaconda prompt, which is often called the &lt;strong&gt;Conda prompt&lt;/strong&gt;. Anaconda is the Python distribution and the Conda prompt is a command line tool (a program where you type in your commands instead of using a mouse). It doesn't look like much, but it is really helpful for an undergraduate engineer using Python.&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda prompt" src="images/anaconda_window.png"&gt;&lt;/p&gt;
&lt;p&gt;At the Anaconda prompt, type &lt;code&gt;python&lt;/code&gt;. This will start the Python interperater. &lt;/p&gt;
&lt;p&gt;&lt;img alt="conda prompt type python" src="images/conda_prompt_type_python.png"&gt;&lt;/p&gt;
&lt;p&gt;Note the Python version. You should see something like &lt;code&gt;Python 3.6.1&lt;/code&gt;.  With the interperter running, you will see a set of greater-than symbols &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; before the cursor. &lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda prompt" src="images/conda_type_python.png"&gt;&lt;/p&gt;
&lt;p&gt;Now you can type Python commands. Try typing &lt;code&gt;import this&lt;/code&gt;. You should see the &lt;strong&gt;&lt;em&gt;Zen of Python&lt;/em&gt;&lt;/strong&gt; by Tim Peters&lt;/p&gt;
&lt;p&gt;&lt;img alt="anaconda_import_this" src="images/conda_import_this_output.png"&gt;&lt;/p&gt;
&lt;p&gt;To close the Python interperater, type &lt;code&gt;exit()&lt;/code&gt; at the interperator prompt &lt;code&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/code&gt;.  Note the double parenthesis at the end of the command. The &lt;code&gt;()&lt;/code&gt; is needed to stop the Python interperator and get back out to the Conda Prompt.&lt;/p&gt;
&lt;p&gt;To close the Conda prompt, you can either close the window with the mouse, or type &lt;code&gt;exit&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
&lt;h4 id="congratulations-you-installed-the-anaconda-distribution-on-your-windows-computer"&gt;Congratulations! You installed the Anaconda distribution on your Windows computer!&lt;/h4&gt;
&lt;p&gt;When you want to use the Python interperater again, just click the Windows Start button and select the &lt;strong&gt;Anaconda Prompt&lt;/strong&gt; and type &lt;code&gt;python&lt;/code&gt;.&lt;/p&gt;</content><category term="python"></category><category term="anaconda"></category><category term="miniconda"></category><category term="conda"></category><category term="windows"></category></entry></feed>