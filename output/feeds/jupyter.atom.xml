<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Python for Undergraduate Engineers - jupyter</title><link href="https://professorkazarinoff.github.io/staticsite/" rel="alternate"></link><link href="https://professorkazarinoff.github.io/staticsite/feeds/jupyter.atom.xml" rel="self"></link><id>https://professorkazarinoff.github.io/staticsite/</id><updated>2018-05-19T12:40:00-07:00</updated><entry><title>Create an SSH Key with PuTTYgen</title><link href="https://professorkazarinoff.github.io/staticsite/ssh-keys-with-putty.html" rel="alternate"></link><published>2018-05-19T12:40:00-07:00</published><updated>2018-05-19T12:40:00-07:00</updated><author><name>Peter D. Kazarinoff</name></author><id>tag:professorkazarinoff.github.io,2018-05-19:/staticsite/ssh-keys-with-putty.html</id><summary type="html">&lt;p&gt;This is the second part of a multi-part series on how to set up Jupyter Hub for a class. This is my first time setting up a Jupyter Hub server. I am primarily writing to my future self as I may need to set up Jupyter Hub again for another class. In this post, I we are going to create an SSH key on a Windows 10 machine using PuTTYgen.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the second part of a multi-part series on how to set up Jupyter Hub for a class. This is my first time setting up a Jupyter Hub server. I am primarily writing to my future self as I may need to set up Jupyter Hub again for another class. In this post, I we are going to create an SSH key on a Windows 10 machine using PuTTYgen.&lt;/p&gt;
&lt;h3&gt;Posts in this series&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href="https://professorkazarinoff.github.io/staticsite/why-jupyter-hub.html"&gt;Why Jupyter Hub?&lt;/a&gt; &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Create ssh key, save to documents/ssh-keys&lt;/strong&gt; (this post)&lt;/li&gt;
&lt;li&gt;Create a new Digital Ocean Droplet with a non-root sudo user&lt;/li&gt;
&lt;li&gt;Install Jupyter Hub on the server&lt;/li&gt;
&lt;li&gt;Apply SSL, link a domain name to the server and configure nginx&lt;/li&gt;
&lt;li&gt;Connect OAuth to Jupyter Hub&lt;/li&gt;
&lt;li&gt;Connect to Jupyter Hub as student&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Steps in this post&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Download PuTTY for Windows&lt;/li&gt;
&lt;li&gt;Start PuTTYgen and create SSH key&lt;/li&gt;
&lt;li&gt;Save SSH public and private keys to Documents folder&lt;/li&gt;
&lt;li&gt;Copy the public key to clipboard&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Why SSH keys, PuTTYgen and why do this first?&lt;/h3&gt;
&lt;p&gt;When I set up the server on Digital Ocean the first time, one of the initial server setup steps was to add SSH keys so the server has them when it initialized. &lt;/p&gt;
&lt;p&gt;I tried to create and save the keys to the Digital Ocean dashboard so the SSH keys would be on the server when it first started. But I goofed up somehow and the server started without any SSH keys. It was a BIG PAIN adding SSH keys after the server started for the first time. &lt;/p&gt;
&lt;p&gt;I ended up copying the public key into pastebin.com, logging onto the server with the Digital Ocean console and using &lt;code&gt;wget&lt;/code&gt; to bring a textfile of the SSH key from pastebin.com onto the server and then &lt;code&gt;mv&lt;/code&gt; to copy the key name into the right location.&lt;/p&gt;
&lt;p&gt;I'm pretty sure that pasting a public SSH key into pastebin.com is not the best way to initially set up a server. So to make sure that doesn't happen again, I am going to generate the SSH keys first and set up the server second. &lt;/p&gt;
&lt;p&gt;SSH keys are needed to use PuTTY (regular PuTTY not PuTTYgen) to log into the server. Since I'm working on Windows, using PuTTYgen (a program that comes with PuTTY that generates SSH keys) seems like the easiest solution. &lt;/p&gt;
&lt;h4&gt;1. Download PuTTY&lt;/h4&gt;
&lt;p&gt;I already have PuTTY installed on my Windows 10 machines at home and at work. The download link is below:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.putty.org/"&gt;Download PuTTY&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PuTTY seems to want you to install lots of extra stuff when you run the installer. I didn't install any of the "offers" that popped up during installation.&lt;/p&gt;
&lt;h4&gt;2. Start PuTTYgen and create SSH key&lt;/h4&gt;
&lt;p&gt;I went through this tutorial to about setting SSH key on Windows for Digital Ocean when I created the first SSH key:&lt;/p&gt;
&lt;p&gt;&lt;a href="https://www.digitalocean.com/community/tutorials/how-to-use-ssh-keys-with-putty-on-digitalocean-droplets-windows-users"&gt;How To Use SSH Keys with PuTTY on DigitalOcean Droplets (Windows users)&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Using the Windows start menu, open PuTTYgen (not regular PuTTY):&lt;/p&gt;
&lt;p&gt;&lt;img alt="PuTTYgen in Windows Start Menu" src="/posts/jupyterhub/puttygen_in_start_menu.png"&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="Putty in Windows Start Menu" src="/posts/jupyterhub/puttygen_key_generator.png"&gt;&lt;/p&gt;
&lt;p&gt;Use the following parameters&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Type of key to generate: RSA&lt;/li&gt;
&lt;li&gt;Number of bits in generated key: 2048&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Then click [generate]&lt;/p&gt;
&lt;p&gt;&lt;img alt="PuTTYgen generate" src="/posts/jupyterhub/puttygen_generate.png"&gt;&lt;/p&gt;
&lt;p&gt;This will bring up a dialog to move the mouse around the empty area to generate some randomness. This is my favorite part. Just move the mouse around the dialog box until the progress bar ends. Fun.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PuTTYgen key generator" src="/posts/jupyterhub/puttygen_key_generator.png"&gt;&lt;/p&gt;
&lt;p&gt;When the next screen pops up, right-click and copy the contents of the Public Key. We'll need the public key contents available to paste into the server's SSH &lt;code&gt;authorized_keys file&lt;/code&gt;. Include the rsa line in the text copied to the clipboard.&lt;/p&gt;
&lt;h4&gt;3. Save SSH public and private keys to Documents folder&lt;/h4&gt;
&lt;p&gt;In the [Actions] section click [Save public key] and click [Save private key]&lt;/p&gt;
&lt;p&gt;&lt;img alt="PuTTYgen save public and private keys" src="/posts/jupyterhub/puttygen_save_public_private_key.png"&gt;&lt;/p&gt;
&lt;p&gt;Make sure to save both the public and the private keys. Save these keys to an accessible folder. The first time I generated SSH keys, I saved the keys in the default location and couldn't access them later. The second time I created SSH keys, I created a folder in the Documents folder called ssh-keys and saved the public and private keys in Documents/ssh-keys. I saved the public key with the name: &lt;code&gt;public_key_jupyter_hub.txt&lt;/code&gt;. The Digital Ocean documentation recommends a .txt file extension for the public key (so you can open it and copy the contents). The private key should have a .ppk file extension.&lt;/p&gt;
&lt;p&gt;&lt;img alt="PuTTYgen save public key name" src="/posts/jupyterhub/puttygen_public_key_save_name.png"&gt;&lt;/p&gt;
&lt;h4&gt;4. Copy the public key to clipboard&lt;/h4&gt;
&lt;p&gt;Before closing PuTTYgen, make sure to copy the contents of the Public Key to the clipboard. We'll need this when we create the server. Copy all of the contents including the rsa line. &lt;/p&gt;
&lt;h3&gt;Results&lt;/h3&gt;
&lt;p&gt;After completing these steps, we have a public and private SSH key pair saved in Documents/ssh-keys. We also have the contents of the public SSH key saved to the clipboard.&lt;/p&gt;
&lt;h3&gt;Next Steps&lt;/h3&gt;
&lt;p&gt;Next, we'll create a new server on Digital Ocean (called a &lt;em&gt;droplet&lt;/em&gt;). Then we'll use the SSH keys we just set up to log into the server and create a non-root sudo user.&lt;/p&gt;</content><category term="jupyter"></category><category term="jupyter hub"></category><category term="jupyter notebooks"></category><category term="python"></category></entry><entry><title>Why Jupyter Hub?</title><link href="https://professorkazarinoff.github.io/staticsite/why-jupyter-hub.html" rel="alternate"></link><published>2018-05-17T12:40:00-07:00</published><updated>2018-05-17T12:40:00-07:00</updated><author><name>Peter D. Kazarinoff</name></author><id>tag:professorkazarinoff.github.io,2018-05-17:/staticsite/why-jupyter-hub.html</id><summary type="html">&lt;p&gt;This is the first part of a multi-part series that shows how to set up &lt;strong&gt;Jupyter Hub&lt;/strong&gt; for an engineering programming class. This is my first time setting up a &lt;strong&gt;Jupyter Hub&lt;/strong&gt; server. I am primarily writing to my future self as I may need to set up a &lt;strong&gt;Jupyter Hub&lt;/strong&gt; server again for a different class in another quarter. I hope the lessons learned will also help other instructors tackle the same problem if they want to set up &lt;strong&gt;Jupyter Hub&lt;/strong&gt; for their own class or team.&lt;/p&gt;</summary><content type="html">&lt;p&gt;This is the first part of a multi-part series that shows how to set up &lt;strong&gt;Jupyter Hub&lt;/strong&gt; for an engineering programming class. This is my first time setting up a &lt;strong&gt;Jupyter Hub&lt;/strong&gt; server. I am primarily writing to my future self as I may need to set up a &lt;strong&gt;Jupyter Hub&lt;/strong&gt; server again for a different class in another quarter. I hope the lessons learned will also help other instructors tackle the same problem if they want to set up &lt;strong&gt;Jupyter Hub&lt;/strong&gt; for their own class or team.&lt;/p&gt;
&lt;h3&gt;Why Jupyter Hub?&lt;/h3&gt;
&lt;p&gt;Why &lt;strong&gt;Jupyter Hub&lt;/strong&gt;? I am teaching an intro engineering course this summer. The course has a lab component and three of the labs are devoted to computer programming. In previous quarters, I've taught MATLAB for the three computer programming labs. But this summer, I want to try teaching &lt;strong&gt;Python&lt;/strong&gt; and cover the same concepts and learning outcomes.&lt;/p&gt;
&lt;p&gt;If we use &lt;strong&gt;Python&lt;/strong&gt; in the three programming labs this summer, I would like to spend the lab time coding and solving problems. I don't want to spend time during the class downloading Python, creating virtual environments, troubleshooting installs, dealing with system vs. non-system versions of Python, installing packages, dealing with folder structure, explaining the difference between conda and pip, teaching command-line commands, going over Python on Windows compared to Python on MacOSX... &lt;/p&gt;
&lt;p&gt;I imagine the first programming lab of the quarter runs like:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There is a .pdf or google doc posted on a shared google drive folder with a link to Jupyter Hub&lt;/li&gt;
&lt;li&gt;Students click the link and bring up the login page&lt;/li&gt;
&lt;li&gt;Students log-in with their college usernames and passwords&lt;/li&gt;
&lt;li&gt;Students type &lt;code&gt;import this&lt;/code&gt; press [Shift+Enter] and their first code cell just runs.&lt;/li&gt;
&lt;li&gt;Students can use &lt;strong&gt;Jupyter Hub&lt;/strong&gt; from any computer with a web browser and an internet connection.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Jupyter Hub&lt;/strong&gt; looks and runs the same on all student computers&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;This is theoretically possible with Jupyter Hub&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Jupyter Hub&lt;/strong&gt; can be installed on a Digital Ocean droplet (a cloud server, like AWS or Google Cloud). The version of &lt;strong&gt;Python&lt;/strong&gt; running the notebooks created by &lt;strong&gt;Jupyter Hub&lt;/strong&gt; can contain the full &lt;strong&gt;Anaconda&lt;/strong&gt; distribution of packages plus some extra packages like &lt;strong&gt;pint&lt;/strong&gt; and &lt;strong&gt;pyserial&lt;/strong&gt;. All of the notebooks will use the same environment. The installed packages will be the same for each student. One Digital Ocean droplet will be able to run all of the notebooks at the same time (hopefully, there will be about 24 students). Student's work will be saved on the server under their user account. Students can download the .ipynb files and upload them to google drive or save the .ipynb files on a thumb drive. After the students login, folders and notebooks can be in place and used as starting points in lab and as lab exercises. After the course ends, students will still be able to log in and use &lt;strong&gt;Jupyter Hub&lt;/strong&gt; and practice writing and running Python code to solve engineering problems.&lt;/p&gt;
&lt;h3&gt;What will it take to make Jupyter Hub a reality?&lt;/h3&gt;
&lt;p&gt;This list will surely change as I go through the process of setting up the &lt;strong&gt;Jupyter Hub&lt;/strong&gt; server. Below are the steps I expect to take and software/hardware needed at each step.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sign up for a Digital Ocean Account (already done)&lt;/li&gt;
&lt;li&gt;Create a new Digital Ocean Droplet (will be called &lt;em&gt;the server&lt;/em&gt; from here on out)&lt;/li&gt;
&lt;li&gt;Connect to the server over SSH and set up SSH keys&lt;/li&gt;
&lt;li&gt;Create a non-root sudo user on the server&lt;/li&gt;
&lt;li&gt;Get a public url, hook up the server DNS record to the public URL&lt;/li&gt;
&lt;li&gt;Install Anaconda on the server&lt;/li&gt;
&lt;li&gt;Install the other packages on the server like jupyter hub, node, pyserial and pint&lt;/li&gt;
&lt;li&gt;Edit permissions of files and directories on the server&lt;/li&gt;
&lt;li&gt;Create and implement SSL certificates on the server&lt;/li&gt;
&lt;li&gt;Run Jupyter Hub as a non-root sudo user&lt;/li&gt;
&lt;li&gt;Connect google OAuth to Jupyter Hub&lt;/li&gt;
&lt;li&gt;Connect to the server as student and celebrate teaching &lt;strong&gt;Python&lt;/strong&gt; without worrying about installation and virtual environments.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Will this work? How much time will it take?&lt;/h3&gt;
&lt;p&gt;Will this work? I hope so. Other people have done it. There was a JupyterCon talk about it, there are &lt;a href="http://jupyterhub.readthedocs.io/en/latest/gallery-jhub-deployments.html"&gt;example implementations&lt;/a&gt; up on github. A large data science class at UC Berkeley ran &lt;strong&gt;Jupyter Hub&lt;/strong&gt;. &lt;/p&gt;
&lt;p&gt;I don't really know how long it will take. The only real step that takes time is the DNS connection. The rest of the steps are in the minute time frame of computing time and probably days if not weeks of troubleshooting time. I'm just going to try and complete a step per day or a step per week and see if I can get the server going by the end of the spring quarter.&lt;/p&gt;
&lt;h3&gt;Next Steps:&lt;/h3&gt;
&lt;p&gt;The next step is really the first step:&lt;/p&gt;
&lt;p&gt;Create SSH keys. We'll need a public/private SSH key pair to be able to log into the &lt;strong&gt;Jupyter Hub&lt;/strong&gt; server over SSH.&lt;/p&gt;</content><category term="jupyter"></category><category term="jupyter hub"></category><category term="jupyter notebooks"></category><category term="python"></category></entry></feed>